pipeline {
    agent any
    environment {
        DOCKER_PASS = credentials('docker_pass')
        SONAR_TOKEN = credentials('sonar_token')
    }
    stages {
        stage('Test') {
            agent { docker 'node:18-alpine3.16' }
            steps {
                sh 'npm install'
                sh 'npm test'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'test-report.html', followSymlinks: false
                }
            }
        }
        stage('CodeInspection'){
            steps{
                sh 'sonar-scanner   -Dsonar.organization=gb-at20   -Dsonar.projectKey=AT20-GB   -Dsonar.sources=.   -Dsonar.host.url=https://sonarcloud.io'
            }
        }
        stage('Package'){
            steps {
                sh 'export SONAR_SCANNER_VERSION=4.7.0.2747'
                sh 'export SONAR_SCANNER_HOME=$JENKINS_HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux'
                sh 'export PATH=$SONAR_SCANNER_HOME/bin:$PATH'
                sh 'export SONAR_SCANNER_OPTS="-server"'
                sh 'docker build -t at20-meeting_service .'
            }
        }
        stage('Publish'){
            steps {
                sh 'docker login -u gioblanco -p ${DOCKER_PASS}'
                sh 'docker tag at20-meeting_service gioblanco/meeting-service'
                sh 'docker push gioblanco/meeting-service'
            }
        }
    } 
}