format_version: 10
pipelines:
  Test1:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:5Y+WdbCALNBBhH4RP7heqA==:WOpYrtphrghvSQ3XMOb3SQFJCzMK6rZqjdDfPO1A/s5hfZfGLUqBPVMbjxNWnZC4
      DOCKER_PASS: AES:8d3+NnDMZsxfMp6j2lKYCg==:L6PgVU7iwKwOCoXZirpUEA==
    materials:
      git-89e38d1:
        git: https://github.com/AT20-DevOps/AT20_MEETING_SERVICE.git
        username: GioBlanco
        shallow_clone: false
        auto_update: true
        branch: task13-gb
        encrypted_password: AES:Wey6o299QCHHaHkYbzFuvQ==:AS+IvBKSX61BzsRj4K4b6A==
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                git rev-parse --short HEAD > gitHash.txt
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                npm install
                npm test
            artifacts:
            - build:
                source: test-report.html
                destination: html_report
            - build:
                source: gitHash.txt
    - code-inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources: 
            - ubuntu
            tasks:
            - script: |
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                        -Dsonar.organization=gb-at20 \
                        -Dsonar.projectKey=AT20-GB \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarcloud.io
    - PackageAndPublish:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          docker:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                is_file: true
                source: gitHash.txt
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                docker build -t at20-meeting_service .
                docker login -u gioblanco -p ${DOCKER_PASS}
                docker tag at20-meeting_service gioblanco/meeting-service:${GIT_COMMIT_HASH}
                docker push gioblanco/meeting-service:${GIT_COMMIT_HASH}
            artifacts:
            - build:
                source: docker-compose.gb.yaml
  Acceptance:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      Test1:
        pipeline: Test1
        stage: PackageAndPublish
    stages:
    - DeployToDev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToDev:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                is_file: true
                source: gitHash.txt
                stage: Test
                job: unit-test
                run_if: passed
            - fetch:
                pipeline: Test1
                stage: PackageAndPublish
                job: docker
                source: docker-compose.gb.yaml
                is_file: true
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                export TAG_VERSION=${GIT_COMMIT_HASH} && docker-compose -f docker-compose.gb.yaml up -d
    - Smoke:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          test:
            timeout: 0
            resources:
            - docker
            tasks:
            - script: |
                echo command to run smoke test 