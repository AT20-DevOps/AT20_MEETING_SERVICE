format_version: 10
pipelines:
  Test1:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:Q5W2/h9e6KcpwRk8dyMwVw==:B9OWBwvzy9v3eG0kTQkHqevScHXHf2Q+AuTVyVEE2BuPyfvBxiLd2X18h7qwI4rT
      DOCKER_PASS: AES:jSN60dt4M071uEZ4Lz7h0Q==:RrDfKCeECDyKJ04g+vlzeg==
    materials:
      git-b35a29f:
        git: https://github.com/AT20-DevOps/AT20_MEETING_SERVICE.git
        username: LorenaRamirez7
        shallow_clone: false
        auto_update: true
        branch: task12-lr
        encrypted_password: AES:6a4/4/OoKZxamQZgXIBYvA==:5LzbO4pHEhy2wqbprrvUWA==
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                npm install
                npm test
            artifacts:
            - build:
                source: test-report.html
                destination: html_report
            - build:
                source: src
    - code_inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - fetch:
                is_file: false
                source: src
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                ls -la
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                        -Dsonar.organization=at20-lr \
                        -Dsonar.projectKey=at20-lr \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarcloud.io
    - PackageAndPublish:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          docker:
            timeout: 0
            resources:
            - docker
            tasks:
            - script: |
                ls -la
                docker build -t at20_meeting_service .
                docker login -u lorenasing -p ${DOCKER_PASS}
                docker tag at20_meeting_service lorenasing/meeting_service:${GIT_COMMIT_HASH}
                docker push lorenasing/meeting_service:${GIT_COMMIT_HASH}
            artifacts:
            - build:
                source: docker-compose.lr.yaml
 
  Acceptance:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      Test1:
        pipeline: Test1
        stage: PackageAndPublish
    stages:
    - DeployToDev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToDev:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                pipeline: Test1
                stage: PackageAndPublish
                job: docker
                source: docker-compose.lr.yaml
                is_file: true
                run_if: passed
            - script: |
                echo deploy here
                ls -la
                export TAG_VERSION=${GIT_COMMIT_HASH} && docker-compose -f docker-compose.lr.yaml up -d

